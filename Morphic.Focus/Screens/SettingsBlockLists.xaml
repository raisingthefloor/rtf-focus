<UserControl x:Class="Morphic.Focus.Screens.SettingsBlockLists"
             xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
             xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
             xmlns:mc="http://schemas.openxmlformats.org/markup-compatibility/2006" 
             xmlns:d="http://schemas.microsoft.com/expression/blend/2008" 
             xmlns:sys="clr-namespace:System;assembly=mscorlib"
             xmlns:local="clr-namespace:Morphic.Focus.Screens"
             xmlns:data="clr-namespace:Morphic.Data.Models;assembly=Morphic.Data"
             mc:Ignorable="d" 
             HorizontalAlignment="Stretch" VerticalAlignment="Stretch" Height="620"
    xmlns:theme="clr-namespace:Microsoft.Windows.Themes;assembly=PresentationFramework.Aero2">
    <UserControl.Resources>
        <BooleanToVisibilityConverter x:Key="boolToVis" />
        <ControlTemplate x:Key="ComboBoxAddTemplate" TargetType="{x:Type ComboBox}">
            <Grid x:Name="templateRoot" SnapsToDevicePixels="true">
                <Grid.ColumnDefinitions>
                    <ColumnDefinition Width="*"/>
                    <ColumnDefinition MinWidth="{DynamicResource {x:Static SystemParameters.VerticalScrollBarWidthKey}}" Width="0"/>
                </Grid.ColumnDefinitions>
                <Popup x:Name="PART_Popup" AllowsTransparency="true" Grid.ColumnSpan="2" IsOpen="{Binding IsDropDownOpen, Mode=TwoWay, RelativeSource={RelativeSource TemplatedParent}}" Margin="1" Placement="Bottom" PopupAnimation="{DynamicResource {x:Static SystemParameters.ComboBoxPopupAnimationKey}}">
                    <theme:SystemDropShadowChrome x:Name="shadow" Color="Transparent" MinWidth="{Binding ActualWidth, ElementName=templateRoot}" MaxHeight="{TemplateBinding MaxDropDownHeight}">
                        <Border x:Name="dropDownBorder" Background="{DynamicResource {x:Static SystemColors.WindowBrushKey}}" BorderThickness="1" BorderBrush="{DynamicResource {x:Static SystemColors.WindowFrameBrushKey}}" Height="146">
                            <Grid>
                                <Grid.RowDefinitions>
                                    <RowDefinition Height="*"/>
                                    <RowDefinition Height="auto"/>
                                </Grid.RowDefinitions>
                                <ScrollViewer  x:Name="DropDownScrollViewer" Grid.Row="0" Grid.Column="0">
                                    <Grid x:Name="grid" RenderOptions.ClearTypeHint="Enabled">
                                        <Canvas x:Name="canvas" HorizontalAlignment="Left" Height="0" VerticalAlignment="Top" Width="0">
                                            <Rectangle x:Name="opaqueRect" Fill="{Binding Background, ElementName=dropDownBorder}" Height="{Binding ActualHeight, ElementName=dropDownBorder}" Width="{Binding ActualWidth, ElementName=dropDownBorder}"/>
                                        </Canvas>
                                        <ItemsPresenter x:Name="ItemsPresenter" KeyboardNavigation.DirectionalNavigation="Contained" SnapsToDevicePixels="{TemplateBinding SnapsToDevicePixels}"/>
                                    </Grid>
                                </ScrollViewer>

                                <Button Click="AddBlockList_Click" Grid.Row="1" Grid.Column="0" HorizontalContentAlignment="Left" Padding="0 0 0 0" Height="23" Background="#4370DB" BorderBrush="#4370DB" TextBlock.LineHeight="15" TextBlock.FontFamily="{DynamicResource SourceSansProRegular}" TextBlock.FontSize="12" TextBlock.Foreground="White">Create new blocklist...
                                    <Button.Style>
                                        <Style TargetType="{x:Type Button}">
                                            <Setter Property="Background" Value="#4370DB"/>
                                            <Setter Property="Template">
                                                <Setter.Value>
                                                    <ControlTemplate TargetType="{x:Type Button}">
                                                        <Border Background="{TemplateBinding Background}" BorderBrush="Transparent" BorderThickness="0">
                                                            <ContentPresenter Margin="6 0 0 0" HorizontalAlignment="Left" VerticalAlignment="Center"/>
                                                        </Border>
                                                    </ControlTemplate>
                                                </Setter.Value>
                                            </Setter>
                                            <Style.Triggers>
                                                <Trigger Property="IsMouseOver" Value="True">
                                                    <Setter Property="Background" Value="#4370DB"/>
                                                </Trigger>
                                            </Style.Triggers>
                                        </Style>
                                    </Button.Style>
                                </Button>
                            </Grid>
                        </Border>
                    </theme:SystemDropShadowChrome>
                </Popup>
                <ToggleButton x:Name="toggleButton" Background="{TemplateBinding Background}" BorderThickness="{TemplateBinding BorderThickness}" BorderBrush="{TemplateBinding BorderBrush}" Grid.ColumnSpan="2" IsChecked="{Binding IsDropDownOpen, Mode=TwoWay, RelativeSource={RelativeSource TemplatedParent}}" Style="{StaticResource ComboBoxToggleButton}"/>
                <ContentPresenter x:Name="contentPresenter" ContentTemplate="{TemplateBinding SelectionBoxItemTemplate}" Content="{TemplateBinding SelectionBoxItem}" ContentTemplateSelector="{TemplateBinding ItemTemplateSelector}" ContentStringFormat="{TemplateBinding SelectionBoxItemStringFormat}" HorizontalAlignment="{TemplateBinding HorizontalContentAlignment}" IsHitTestVisible="false" Margin="{TemplateBinding Padding}" SnapsToDevicePixels="{TemplateBinding SnapsToDevicePixels}" VerticalAlignment="{TemplateBinding VerticalContentAlignment}"/>
            </Grid>
            <ControlTemplate.Triggers>
                <Trigger Property="HasDropShadow" SourceName="PART_Popup" Value="true">
                    <Setter Property="Margin" TargetName="shadow" Value="0,0,5,5"/>
                    <Setter Property="Color" TargetName="shadow" Value="#71000000"/>
                </Trigger>
                <Trigger Property="HasItems" Value="false">
                    <Setter Property="Height" TargetName="dropDownBorder" Value="95"/>
                </Trigger>
                <MultiTrigger>
                    <MultiTrigger.Conditions>
                        <Condition Property="IsGrouping" Value="true"/>
                        <Condition Property="VirtualizingPanel.IsVirtualizingWhenGrouping" Value="false"/>
                    </MultiTrigger.Conditions>
                    <Setter Property="ScrollViewer.CanContentScroll" Value="false"/>
                </MultiTrigger>
                <Trigger Property="ScrollViewer.CanContentScroll" SourceName="DropDownScrollViewer" Value="false">
                    <Setter Property="Canvas.Top" TargetName="opaqueRect" Value="{Binding VerticalOffset, ElementName=DropDownScrollViewer}"/>
                    <Setter Property="Canvas.Left" TargetName="opaqueRect" Value="{Binding HorizontalOffset, ElementName=DropDownScrollViewer}"/>
                </Trigger>
            </ControlTemplate.Triggers>
        </ControlTemplate>
        <Style x:Key="SettingsAddComboBoxStyle" TargetType="{x:Type ComboBox}">
            <Setter Property="FocusVisualStyle" Value="{StaticResource cmbFocusVisual}"/>
            <Setter Property="Background" Value="{DynamicResource ComboBox.Static.Background}"/>
            <Setter Property="BorderBrush" Value="{DynamicResource ComboBox.Static.Border}"/>
            <Setter Property="Foreground" Value="{DynamicResource {x:Static SystemColors.WindowTextBrushKey}}"/>
            <Setter Property="BorderThickness" Value="1"/>
            <Setter Property="ScrollViewer.HorizontalScrollBarVisibility" Value="Auto"/>
            <Setter Property="ScrollViewer.VerticalScrollBarVisibility" Value="Auto"/>
            <Setter Property="Padding" Value="6,3,5,3"/>
            <Setter Property="ScrollViewer.CanContentScroll" Value="true"/>
            <Setter Property="ScrollViewer.PanningMode" Value="Both"/>
            <Setter Property="Stylus.IsFlicksEnabled" Value="False"/>
            <Setter Property="Template" Value="{StaticResource ComboBoxAddTemplate}"/>
            <Style.Triggers>
                <Trigger Property="IsEditable" Value="true">
                    <Setter Property="IsTabStop" Value="false"/>
                    <Setter Property="Padding" Value="2"/>
                    <Setter Property="Template" Value="{DynamicResource ComboBoxEditableTemplate}"/>
                </Trigger>
            </Style.Triggers>
        </Style>

        <ObjectDataProvider MethodName="GetValues"
                ObjectType="{x:Type sys:Enum}"
                x:Key="BlockBehaviorValues">
            <ObjectDataProvider.MethodParameters>
                <x:Type TypeName="data:BreakBehavior" />
            </ObjectDataProvider.MethodParameters>
        </ObjectDataProvider>

        <ObjectDataProvider MethodName="GetValues"
                ObjectType="{x:Type sys:Enum}"
                x:Key="PenaltyValues">
            <ObjectDataProvider.MethodParameters>
                <x:Type TypeName="data:Penalty" />
            </ObjectDataProvider.MethodParameters>
        </ObjectDataProvider>
        
        <local:EnumDescriptionConverter x:Key="EnumDescriptionConverter"></local:EnumDescriptionConverter>
        
        <DataTemplate DataType="{x:Type data:Blocklist}" x:Key="BlockListDetails">
            <Border Width="513" BorderBrush="#BFBFBF" CornerRadius="8" BorderThickness="1" Background="#F4F8FF" Margin="8" >
                <Grid>
                    <Grid.ColumnDefinitions>
                        <ColumnDefinition Width="*"/>
                        <ColumnDefinition Width="*"/>
                    </Grid.ColumnDefinitions>

                    <Grid.RowDefinitions>
                        <RowDefinition Height="Auto"/>
                        <RowDefinition Height="Auto"/>
                        <RowDefinition Height="Auto"/>
                        <RowDefinition Height="Auto"/>
                        <RowDefinition Height="Auto"/>
                        <RowDefinition Height="Auto"/>
                        <RowDefinition Height="Auto"/>
                        <RowDefinition Height="Auto"/>
                        <RowDefinition Height="Auto"/>
                        <RowDefinition Height="Auto"/>
                    </Grid.RowDefinitions>

                    <TextBlock Style="{DynamicResource SettingsSectionItalicBody}" Grid.Row="0" Grid.ColumnSpan="2" Grid.Column="0" Margin="0 8 8 8" HorizontalAlignment="Right" Height="15">
                        The following settings only apply to the selected blocklist
                    </TextBlock>

                    <TextBlock Style="{DynamicResource SettingsSectionTitle}" Height="15" Grid.Row="1" Grid.Column="0" Margin="20 12 20 8">
                        Block all items in these categories:</TextBlock>
                    <TextBlock Style="{DynamicResource SettingsSectionTitle}" Height="15" Grid.Row="1" Grid.Column="1" Margin="20 12 20 8">
                        Also, block these apps &amp; websites:</TextBlock>

                    <Border Grid.Row="2" Grid.Column="0" BorderThickness="1" BorderBrush="{DynamicResource GreyBorder}" Width="232" Height="171"  
                             CornerRadius="4" Background="White" >
                        <ScrollViewer Margin="0 0 1 0">
                            <StackPanel Margin="9 4 8 4">
                                <ItemsControl ItemsSource="{Binding Path=Blockcategories}">
                                    <ItemsControl.ItemTemplate>
                                        <DataTemplate>
                                            <DockPanel Width="230" Height="23">
                                                <CheckBox Style="{DynamicResource SettingsCheckbox}" Width="200" VerticalAlignment="Top" 
                                                    IsChecked="{Binding Path=IsActive}">
                                                    <StackPanel Orientation="Horizontal">
                                                        <TextBlock Margin="0 2 0 0">
                                                            <Hyperlink Tag="Category" >
                                                                <Run Text="{Binding Name}"/>
                                                                <Image Source="/Images/external-link 1.png" Width="12" Height="12"/>
                                                            </Hyperlink>
                                                            <TextBlock.Style>
                                                                <Style TargetType="{x:Type TextBlock}">
                                                                    <Style.Triggers>
                                                                        <DataTrigger Binding="{Binding Name}" Value="Porn">
                                                                            <Setter Property="Visibility" Value="Collapsed" />
                                                                        </DataTrigger>
                                                                        <DataTrigger Binding="{Binding Name}" Value="Notifications">
                                                                            <Setter Property="Visibility" Value="Collapsed" />
                                                                        </DataTrigger>
                                                                    </Style.Triggers>
                                                                </Style>
                                                            </TextBlock.Style>
                                                        </TextBlock>
                                                        <TextBlock Margin="0 2 0 0" Text="{Binding Name}">
                                                            <TextBlock.Style>
                                                                <Style TargetType="{x:Type TextBlock}">
                                                                    <Setter Property="Visibility" Value="Hidden" />
                                                                    <Style.Triggers>
                                                                        <DataTrigger Binding="{Binding Name}" Value="Porn" >
                                                                            <Setter Property="Visibility" Value="Visible" />
                                                                        </DataTrigger>
                                                                        <DataTrigger Binding="{Binding Name}" Value="Notifications" >
                                                                            <Setter Property="Visibility" Value="Visible" />
                                                                        </DataTrigger>
                                                                    </Style.Triggers>
                                                                </Style>
                                                            </TextBlock.Style>
                                                        </TextBlock>
                                                    </StackPanel>
                                                </CheckBox>
                                            </DockPanel>
                                        </DataTemplate>
                                    </ItemsControl.ItemTemplate>
                                </ItemsControl>
                            </StackPanel>
                        </ScrollViewer>


                    </Border>

                    <Border Grid.Row="2" Grid.Column="1" BorderThickness="1" BorderBrush="{DynamicResource GreyBorder}" Width="232" Height="171"  
                             CornerRadius="4" Background="White">
                        <Grid>
                            <Grid.RowDefinitions>
                                <RowDefinition Height="*"/>
                                <RowDefinition Height="41"/>
                            </Grid.RowDefinitions>
                            <ItemsControl  Name="dgBlock" Grid.Row="0" Grid.Column="0" MinHeight="130" ItemsSource="{Binding AlsoBlock.ActiveAppsAndWebsites}">
                                <ItemsControl.ItemTemplate>
                                    <DataTemplate>
                                        <DockPanel Height="23">
                                            <TextBlock Style="{DynamicResource SettingsSectionBody}" Text="{Binding Name}" Width="100" Margin="9 9 0 0">
                                            </TextBlock>
                                            <Button Style="{DynamicResource SetingsImageButtonStyle}" Cursor="Hand" Name="btnAlsoBlockRemove" Click="btnAlsoBlockRemove_Click">
                                                <Image Source="/Images/Remove Icon.png" Width="8" Height="8" HorizontalAlignment="Right" Margin="6 0"/>
                                            </Button>
                                        </DockPanel>
                                    </DataTemplate>
                                </ItemsControl.ItemTemplate>
                            </ItemsControl>

                            <StackPanel Grid.Row="1" Grid.Column="0" Background="#F1F1F1" MinHeight="41" Orientation="Horizontal" HorizontalAlignment="Center" Width="230">
                                <Button Name="btnBlockAddApp" Click="btnBlockAddApp_Click" Style="{DynamicResource SettingsButtons}" Margin="8 8 4 8">Add App</Button>
                                <Button Name="btnBlockAddWebsite" Click="btnBlockAddWebsite_Click"  Style="{DynamicResource SettingsButtons}" Margin="4 8 8 8">Add Website</Button>
                            </StackPanel>
                        </Grid>
                    </Border>

                    <TextBlock Style="{DynamicResource SettingsSectionTitle}" Height="15" Grid.Row="3" Grid.Column="0" Grid.ColumnSpan="2" Margin="20 12 20 0">
                        Exceptions to blocked items:
                    </TextBlock>
                    <TextBlock Style="{DynamicResource SettingsSectionItalicBody}" Height="15" Grid.Row="4" Grid.Column="0" Grid.ColumnSpan="2" Margin="20 0 20 8" Foreground="#333333">
                        These will not be blocked even if in one of the lists above:
                    </TextBlock>

                    <Border Grid.Row="5" Grid.Column="0" BorderThickness="1" BorderBrush="{DynamicResource GreyBorder}" Width="232" Height="171"  
                             CornerRadius="4" Background="White">
                        <Grid>
                            <Grid.RowDefinitions>
                                <RowDefinition Height="*"/>
                                <RowDefinition Height="41"/>
                            </Grid.RowDefinitions>
                            <ItemsControl Grid.Row="0" Grid.Column="0" MinHeight="130" ItemsSource="{Binding Exceptions.ActiveAppsAndWebsites}">
                                <ItemsControl.ItemTemplate>
                                    <DataTemplate>
                                        <DockPanel Height="23">
                                            <TextBlock Style="{DynamicResource SettingsSectionBody}" Text="{Binding Name}" Width="100" Margin="9 9 0 0">
                                            </TextBlock>
                                            <Button Style="{DynamicResource SetingsImageButtonStyle}" Cursor="Hand" Name="btnExceptionsRemove" Click="btnExceptionsRemove_Click">
                                                <Image Source="/Images/Remove Icon.png" Width="8" Height="8" HorizontalAlignment="Right" Margin="6 0" />
                                            </Button>
                                        </DockPanel>
                                    </DataTemplate>
                                </ItemsControl.ItemTemplate>
                            </ItemsControl>

                            <StackPanel Grid.Row="1" Grid.Column="0" Background="#F1F1F1" MinHeight="41" Orientation="Horizontal" HorizontalAlignment="Center" Width="230">
                                <Button Style="{DynamicResource SettingsButtons}" Margin="8 8 4 8" Name="btnExceptionsAddApp" Click="btnExceptionsAddApp_Click">Add App</Button>
                                <Button Style="{DynamicResource SettingsButtons}" Margin="4 8 8 8" Name="btnExceptionsAddWebsite" Click="btnExceptionsAddWebsite_Click">Add Website</Button>
                            </StackPanel>
                        </Grid>
                    </Border>
                    <TextBlock Grid.Row="5" Grid.Column="1" TextWrapping="WrapWithOverflow" VerticalAlignment="Center"
                               FontFamily="{DynamicResource SourceSansProBold}" FontSize="13" FontStyle="Italic" FontWeight="Bold" LineHeight="16" Foreground="#8C191B" Margin="20 0 37 0">
                        <Run>Note: You cannot change a blocklist while it is in use in an active focus session.</Run>                  
                        <Run>Any changes made will not take effect until the next focus session where the blocklist is used.</Run>
                    </TextBlock>

                    <TextBlock Style="{DynamicResource SettingsSectionTitle}" Height="15" Grid.Row="6" Grid.Column="0" Grid.ColumnSpan="2" Margin="20 25 20 0">
                        Blocklist behavior during breaks:
                    </TextBlock>

                    <ListView Margin="20 0 20 0" Grid.Row="7" Grid.Column="0" Grid.ColumnSpan="2" Background="Transparent" BorderThickness="0"
                              ItemsSource="{Binding Source={StaticResource BlockBehaviorValues}}" SelectedItem="{Binding Path=BreakBehavior, Mode=TwoWay}">
                        <ListView.ItemTemplate>
                            <DataTemplate>
                                <RadioButton Style="{DynamicResource SettingsRadioStyle}" Content="{Binding Converter={StaticResource EnumDescriptionConverter}}" GroupName="BreakBehavior" IsChecked="{Binding IsSelected, RelativeSource={RelativeSource Mode=FindAncestor, AncestorType={x:Type ListBoxItem}}}"/>
                            </DataTemplate>
                        </ListView.ItemTemplate>
                        <ListView.ItemContainerStyle>
                            <Style TargetType="{x:Type ListViewItem}">
                                <Setter Property="Background" Value="Transparent" />
                                <Setter Property="Template">
                                    <Setter.Value>
                                        <ControlTemplate TargetType="{x:Type ListViewItem}">
                                            <ContentPresenter />
                                        </ControlTemplate>
                                    </Setter.Value>
                                </Setter>
                            </Style>
                        </ListView.ItemContainerStyle>
                    </ListView>

                    <TextBlock Style="{DynamicResource SettingsSectionTitle}" Height="15" Grid.Row="8" Grid.Column="0" Grid.ColumnSpan="2" Margin="20 25 20 0">
                        Discourage me from stopping early:
                    </TextBlock>

                    <ListView Margin="20 0 20 10" Grid.Row="9" Grid.Column="0" Grid.ColumnSpan="2" Background="Transparent" BorderThickness="0" 
                              ItemsSource="{Binding Source={StaticResource PenaltyValues}}" SelectedItem="{Binding Path=Penalty, Mode=TwoWay}"  FontFamily="{DynamicResource SourceSansProRegular}" FontSize="12" x:Name="lvPenalty">
                        <ListView.ItemTemplate>
                            <DataTemplate>
                                <StackPanel Orientation="Horizontal">
                                    <RadioButton Content="{Binding Converter={StaticResource EnumDescriptionConverter}}" GroupName="Penalty" IsChecked="{Binding IsSelected, RelativeSource={RelativeSource Mode=FindAncestor, AncestorType={x:Type ListBoxItem}}}"/>
                                    <TextBox Width="22" Text="{Binding ElementName=lvPenalty, Path=DataContext.PenaltyValue, UpdateSourceTrigger=PropertyChanged}" Margin="3 0 0 0" PreviewTextInput="TextBox_PreviewTextInput">
                                        <TextBox.Style>
                                            <Style TargetType="{x:Type TextBox}">
                                                <Style.Triggers>
                                                    <DataTrigger Binding="{Binding}" Value="0">
                                                        <Setter Property="Visibility" Value="Collapsed" />
                                                    </DataTrigger>
                                                    <DataTrigger Binding="{Binding}" Value="2">
                                                        <Setter Property="Visibility" Value="Collapsed" />
                                                    </DataTrigger>
                                                    <DataTrigger Binding="{Binding ElementName=lvPenalty, Path=DataContext.Penalty}" Value="2">
                                                        <Setter Property="IsEnabled" Value="False" />
                                                    </DataTrigger>
                                                    <DataTrigger Binding="{Binding ElementName=lvPenalty, Path=DataContext.Penalty}" Value="0">
                                                        <Setter Property="IsEnabled" Value="False" />
                                                    </DataTrigger>
                                                </Style.Triggers>
                                            </Style>
                                        </TextBox.Style>
                                    </TextBox>
                                    <TextBlock Margin="6,0,0,0">random characters
                                        <TextBlock.Style>
                                            <Style TargetType="{x:Type TextBlock}">
                                                <Style.Triggers>
                                                    <DataTrigger Binding="{Binding}" Value="0">
                                                        <Setter Property="Visibility" Value="Collapsed" />
                                                    </DataTrigger>
                                                    <DataTrigger Binding="{Binding}" Value="2">
                                                        <Setter Property="Visibility" Value="Collapsed" />
                                                    </DataTrigger>
                                                </Style.Triggers>
                                            </Style>
                                        </TextBlock.Style>
                                    </TextBlock>
                                </StackPanel>
                            </DataTemplate>
                        </ListView.ItemTemplate>
                        <ListView.ItemContainerStyle>
                            <Style TargetType="{x:Type ListViewItem}">
                                <Setter Property="Background" Value="Transparent" />
                                <Setter Property="Template">
                                    <Setter.Value>
                                        <ControlTemplate TargetType="{x:Type ListViewItem}">
                                            <ContentPresenter />
                                        </ControlTemplate>
                                    </Setter.Value>
                                </Setter>
                            </Style>

                        </ListView.ItemContainerStyle>
                    </ListView>
                </Grid>
            </Border>
        </DataTemplate>

    </UserControl.Resources>

    <ScrollViewer VerticalScrollBarVisibility="Auto">
    <StackPanel>

        <StackPanel Style="{DynamicResource SettingStackPanelStyle}">
            <ItemsControl Height="auto">
                <TextBlock Style="{DynamicResource SettingsHeader}" Padding="0,10,0,0" >Edit Blocklists</TextBlock>
                <TextBlock Style="{DynamicResource SettingsSectionItalicBody}" Padding="0 0 0 10">
                    
                        A blocklist is a group of apps, websites and other items that you can choose to block during a focus session. 
                    
                    <Hyperlink NavigateUri="https://morphic.org/blocklists">
                        Learn more about Blocklists
                        <InlineUIContainer>
                            <Image Source="/Images/external-link 1.png" Width="12" Height="12"/>
                        </InlineUIContainer>
                    </Hyperlink>

                </TextBlock>
            </ItemsControl>
            <TextBlock Style="{DynamicResource SettingsSectionTitle}">Select a blocklist to edit:</TextBlock>
        </StackPanel>

        <Canvas Height="650" Margin="0 0 0 30">

            <ComboBox Name="cmbBlockList" Style="{DynamicResource SettingsAddComboBoxStyle}" Width="154" Height="23" Canvas.Left="28" Canvas.ZIndex="2" Canvas.Top="10" ItemsSource="{Binding Path=Engine.UserPreferences.BlockLists}" SelectedItem="{Binding Path=Engine.SelectedBlockList, Mode=TwoWay}"
                  DisplayMemberPath="Name" SelectedValuePath="Name">
            </ComboBox>

            <ContentControl Content="{Binding Path=Engine.SelectedBlockList}"
                    ContentTemplate="{StaticResource BlockListDetails}" Canvas.Top="15" Canvas.ZIndex="1"/>



        </Canvas>

    </StackPanel>
    </ScrollViewer>
</UserControl>
