<Window x:Class="Morphic.Focus.Screens.FocusMain"
        xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
        xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
        xmlns:d="http://schemas.microsoft.com/expression/blend/2008"
        xmlns:mc="http://schemas.openxmlformats.org/markup-compatibility/2006"
        xmlns:local="clr-namespace:Morphic.Focus.Screens"
        xmlns:theme="clr-namespace:Microsoft.Windows.Themes;assembly=PresentationFramework.Aero2"
        mc:Ignorable="d" 
        Width="390" Height="441" WindowStyle="None" AllowsTransparency="True" Background="Transparent" Title="Focus Main Menu"
        MouseMove="Window_MouseMove" WindowStartupLocation="CenterScreen" IsVisibleChanged="Window_IsVisibleChanged">
    <Window.CommandBindings>
        <CommandBinding Command="ApplicationCommands.Close" Executed="CloseCommandHandler"/>
    </Window.CommandBindings>
    <Window.Resources>
        <Style x:Key="IButtonStyle" TargetType="{x:Type ToggleButton}">
            <Setter Property="Height" Value="24" />
            <Setter Property="Width" Value="24" />
            <Setter Property="Padding" Value="4 2"/>
            <Setter Property="FontSize" Value="16"/>
            <Setter Property="FontWeight" Value="Bold"/>
            <Setter Property="Template">
                <Setter.Value>
                    <ControlTemplate TargetType="ToggleButton">
                        <Grid>
                            <Ellipse Fill="{TemplateBinding Background}" Stroke="{TemplateBinding Foreground}"/>
                            <ContentPresenter Content="{TemplateBinding Content}" HorizontalAlignment="Center" VerticalAlignment="Center"/>
                        </Grid>
                    </ControlTemplate>
                </Setter.Value>
            </Setter>
            <Style.Triggers>
                <Trigger Property="IsChecked" Value="True">
                    <Setter Property="Background" Value="Transparent" />
                    <Setter Property="Foreground" Value="Black" />
                </Trigger>
                <Trigger Property="IsChecked" Value="False">
                    <Setter Property="Background" Value="#002957" />
                    <Setter Property="Foreground" Value="White" />
                </Trigger>
            </Style.Triggers>
        </Style>
        <ControlTemplate x:Key="ComboBoxAddTemplate" TargetType="{x:Type ComboBox}">
            <Grid x:Name="templateRoot" SnapsToDevicePixels="true">
                <Grid.ColumnDefinitions>
                    <ColumnDefinition Width="*"/>
                    <ColumnDefinition MinWidth="{DynamicResource {x:Static SystemParameters.VerticalScrollBarWidthKey}}" Width="0"/>
                </Grid.ColumnDefinitions>
                <Popup x:Name="PART_Popup" AllowsTransparency="true" Grid.ColumnSpan="2" IsOpen="{Binding IsDropDownOpen, Mode=TwoWay, RelativeSource={RelativeSource TemplatedParent}}" Margin="1" Placement="Bottom" PopupAnimation="{DynamicResource {x:Static SystemParameters.ComboBoxPopupAnimationKey}}">
                    <theme:SystemDropShadowChrome x:Name="shadow" Color="Transparent" MinWidth="{Binding ActualWidth, ElementName=templateRoot}" MaxHeight="{TemplateBinding MaxDropDownHeight}">
                        <Border x:Name="dropDownBorder" Background="{DynamicResource {x:Static SystemColors.WindowBrushKey}}" BorderThickness="1" BorderBrush="{DynamicResource {x:Static SystemColors.WindowFrameBrushKey}}" Height="146">
                            <Grid>
                                <Grid.RowDefinitions>
                                    <RowDefinition Height="*"/>
                                    <RowDefinition Height="auto"/>
                                </Grid.RowDefinitions>
                                <ScrollViewer  x:Name="DropDownScrollViewer" Grid.Row="0" Grid.Column="0">
                                    <Grid x:Name="grid" RenderOptions.ClearTypeHint="Enabled">
                                        <Canvas x:Name="canvas" HorizontalAlignment="Left" Height="0" VerticalAlignment="Top" Width="0">
                                            <Rectangle x:Name="opaqueRect" Fill="{Binding Background, ElementName=dropDownBorder}" Height="{Binding ActualHeight, ElementName=dropDownBorder}" Width="{Binding ActualWidth, ElementName=dropDownBorder}"/>
                                        </Canvas>
                                        <ItemsPresenter x:Name="ItemsPresenter" KeyboardNavigation.DirectionalNavigation="Contained" SnapsToDevicePixels="{TemplateBinding SnapsToDevicePixels}"/>
                                    </Grid>
                                </ScrollViewer>

                                <Button Click="btnViewEditBlockList_Click" Grid.Row="1" Grid.Column="0" HorizontalContentAlignment="Left" Padding="0 0 0 0" Height="23" Name="btnViewEditBlockList"  Background="#4370DB" BorderBrush="#4370DB" TextBlock.LineHeight="15" TextBlock.FontFamily="{DynamicResource SourceSansProRegular}" TextBlock.FontSize="12" TextBlock.Foreground="White">View or edit blocklist...
                                    <Button.Style>
                                        <Style TargetType="{x:Type Button}">
                                            <Setter Property="Background" Value="#4370DB"/>
                                            <Setter Property="Template">
                                                <Setter.Value>
                                                    <ControlTemplate TargetType="{x:Type Button}">
                                                        <Border Background="{TemplateBinding Background}" BorderBrush="Transparent" BorderThickness="0">
                                                            <ContentPresenter Margin="6 0 0 0" HorizontalAlignment="Left" VerticalAlignment="Center"/>
                                                        </Border>
                                                    </ControlTemplate>
                                                </Setter.Value>
                                            </Setter>
                                            <Style.Triggers>
                                                <Trigger Property="IsMouseOver" Value="True">
                                                    <Setter Property="Background" Value="#4370DB"/>
                                                </Trigger>
                                            </Style.Triggers>
                                        </Style>
                                    </Button.Style>
                                </Button>
                            </Grid>
                        </Border>
                    </theme:SystemDropShadowChrome>
                </Popup>
                <ToggleButton x:Name="toggleButton" Background="{TemplateBinding Background}" BorderThickness="{TemplateBinding BorderThickness}" BorderBrush="{TemplateBinding BorderBrush}" Grid.ColumnSpan="2" IsChecked="{Binding IsDropDownOpen, Mode=TwoWay, RelativeSource={RelativeSource TemplatedParent}}" Style="{StaticResource ComboBoxToggleButton}"/>
                <ContentPresenter x:Name="contentPresenter" ContentTemplate="{TemplateBinding SelectionBoxItemTemplate}" Content="{TemplateBinding SelectionBoxItem}" ContentTemplateSelector="{TemplateBinding ItemTemplateSelector}" ContentStringFormat="{TemplateBinding SelectionBoxItemStringFormat}" HorizontalAlignment="{TemplateBinding HorizontalContentAlignment}" IsHitTestVisible="false" Margin="{TemplateBinding Padding}" SnapsToDevicePixels="{TemplateBinding SnapsToDevicePixels}" VerticalAlignment="{TemplateBinding VerticalContentAlignment}"/>
            </Grid>
            <ControlTemplate.Triggers>
                <Trigger Property="HasDropShadow" SourceName="PART_Popup" Value="true">
                    <Setter Property="Margin" TargetName="shadow" Value="0,0,5,5"/>
                    <Setter Property="Color" TargetName="shadow" Value="#71000000"/>
                </Trigger>
                <Trigger Property="HasItems" Value="false">
                    <Setter Property="Height" TargetName="dropDownBorder" Value="95"/>
                </Trigger>
                <MultiTrigger>
                    <MultiTrigger.Conditions>
                        <Condition Property="IsGrouping" Value="true"/>
                        <Condition Property="VirtualizingPanel.IsVirtualizingWhenGrouping" Value="false"/>
                    </MultiTrigger.Conditions>
                    <Setter Property="ScrollViewer.CanContentScroll" Value="false"/>
                </MultiTrigger>
                <Trigger Property="ScrollViewer.CanContentScroll" SourceName="DropDownScrollViewer" Value="false">
                    <Setter Property="Canvas.Top" TargetName="opaqueRect" Value="{Binding VerticalOffset, ElementName=DropDownScrollViewer}"/>
                    <Setter Property="Canvas.Left" TargetName="opaqueRect" Value="{Binding HorizontalOffset, ElementName=DropDownScrollViewer}"/>
                </Trigger>
            </ControlTemplate.Triggers>
        </ControlTemplate>
        <Style x:Key="SettingsViewEditComboBoxStyle" TargetType="{x:Type ComboBox}">
            <Setter Property="FocusVisualStyle" Value="{StaticResource cmbFocusVisual}"/>
            <Setter Property="Background" Value="{DynamicResource ComboBox.Static.Background}"/>
            <Setter Property="BorderBrush" Value="{DynamicResource ComboBox.Static.Border}"/>
            <Setter Property="Foreground" Value="{DynamicResource {x:Static SystemColors.WindowTextBrushKey}}"/>
            <Setter Property="BorderThickness" Value="1"/>
            <Setter Property="ScrollViewer.HorizontalScrollBarVisibility" Value="Auto"/>
            <Setter Property="ScrollViewer.VerticalScrollBarVisibility" Value="Auto"/>
            <Setter Property="Padding" Value="6,3,5,3"/>
            <Setter Property="ScrollViewer.CanContentScroll" Value="true"/>
            <Setter Property="ScrollViewer.PanningMode" Value="Both"/>
            <Setter Property="Stylus.IsFlicksEnabled" Value="False"/>
            <Setter Property="Template" Value="{StaticResource ComboBoxAddTemplate}"/>
            <Style.Triggers>
                <Trigger Property="IsEditable" Value="true">
                    <Setter Property="IsTabStop" Value="false"/>
                    <Setter Property="Padding" Value="2"/>
                    <Setter Property="Template" Value="{DynamicResource ComboBoxEditableTemplate}"/>
                </Trigger>
            </Style.Triggers>
        </Style>
    </Window.Resources>
    <Border CornerRadius="18" BorderThickness="1" BorderBrush="#008145" Background="{DynamicResource LightGreen}" Padding="0" Margin="0">
        <Grid>
            <Grid.RowDefinitions>
                <RowDefinition Height="30"></RowDefinition>
                <RowDefinition Height="auto"></RowDefinition>
                <RowDefinition Height="auto"></RowDefinition>
                <RowDefinition Height="auto"></RowDefinition>
                <RowDefinition Height="auto"></RowDefinition>
                <RowDefinition Height="auto"></RowDefinition>
                <RowDefinition Height="*"></RowDefinition>
                <RowDefinition Height="35"></RowDefinition>
            </Grid.RowDefinitions>

            <Button Grid.Row="0" Grid.Column="0" HorizontalAlignment="Right" Width="30" Height="30" Content="&#10005;" FontSize="20" BorderThickness="0" Command="ApplicationCommands.Close" 
                    Foreground="Black" Background="Transparent" ></Button>

            <StackPanel Grid.Row="1" Grid.Column="0" Margin="25 3 25 0" Orientation="Horizontal" Height="28">
                <TextBlock Style="{DynamicResource TitleStyle}" Margin="66 0 0 0">Start a Focus Session</TextBlock>
                <ToggleButton x:Name="btnInfo" Margin="15 0 0 0" Content="i" Style="{StaticResource IButtonStyle}" ToolTip="Adds help text to page" Click="btnInfo_Click" IsChecked="False"></ToggleButton>
            </StackPanel>

            <Grid Margin="25 33 25 20" Grid.Row="2" Grid.Column="0">
                <Grid.RowDefinitions>
                    <RowDefinition Height="auto"></RowDefinition>
                    <RowDefinition Height="auto"></RowDefinition>
                    <RowDefinition Height="auto"></RowDefinition>
                    <RowDefinition Height="auto"></RowDefinition>
                    <RowDefinition Height="auto"></RowDefinition>
                    <RowDefinition Height="auto"></RowDefinition>
                </Grid.RowDefinitions>

                <CheckBox Grid.Row="0" Grid.Column="0" HorizontalAlignment="Left" FontSize="12" FontFamily="{DynamicResource SourceSansProRegular}" Name="chkDND" GotFocus="FocusChange" LostFocus="FocusChange" MouseEnter="MouseOver" MouseLeave="MouseOver">
                    Turn on “Do Not Disturb” while focusing</CheckBox>
                <TextBlock Grid.Row="1" Grid.Column="0" Style="{DynamicResource ContentStyle}" Foreground="Blue" Margin="20 0 0 17"
                           FontStyle="Italic" Name="txtInfo1" Visibility="Hidden">
                    Turns off notifications and calls
                </TextBlock>

                <StackPanel Name="sPnlBreakSetting" Orientation="Horizontal" Grid.Row="2" Grid.Column="0" VerticalAlignment="Center" GotFocus="FocusChange" LostFocus="FocusChange" MouseEnter="MouseOver" MouseLeave="MouseOver">
                    <CheckBox Name="chkProvide" HorizontalAlignment="Left" FontSize="12" FontFamily="{DynamicResource SourceSansProRegular}" VerticalAlignment="Center">
                        Provide short</CheckBox>
                    <ComboBox Name="cmbBreakTIme" Style="{DynamicResource SettingsComboBoxStyle}" Width="54" Height="20" Margin="4 0 0 0" Padding="3 3 1 3"
                              FontFamily="{DynamicResource SourceSansProRegular}" HorizontalAlignment="Left" >
                        <ComboBoxItem IsSelected="True" Tag="1">1 min</ComboBoxItem>
                        <ComboBoxItem Tag="3">3 min</ComboBoxItem>
                        <ComboBoxItem Tag="5">5 min</ComboBoxItem>
                        <ComboBoxItem Tag="10">10 min</ComboBoxItem>
                    </ComboBox>
                    <TextBlock Name="txtEvery" Margin="4 0 0 0" Style="{DynamicResource SettingsSectionBody}" HorizontalAlignment="Left" VerticalAlignment="Center">breaks for every</TextBlock>
                    <ComboBox Name="cmbEvery" Style="{DynamicResource SettingsComboBoxStyle}" Width="60" Height="20" Margin="4 0 0 0"  Padding="3 3 1 3"
                              FontFamily="{DynamicResource SourceSansProRegular}" HorizontalAlignment="Left" VerticalAlignment="Center" >
                        <ComboBoxItem IsSelected="True" Tag="15">15 min</ComboBoxItem>
                        <ComboBoxItem Tag="20">20 min</ComboBoxItem>
                        <ComboBoxItem Tag="25">25 min</ComboBoxItem>
                        <ComboBoxItem Tag="30">30 min</ComboBoxItem>
                        <ComboBoxItem Tag="45">45 min</ComboBoxItem>
                        <ComboBoxItem Tag="60">60 min</ComboBoxItem>
                    </ComboBox>
                    <TextBlock Name="txtFocus" Margin="4 0 0 0" Style="{DynamicResource SettingsSectionBody}" VerticalAlignment="Center">of Focus</TextBlock>
                </StackPanel>
                <TextBlock Grid.Row="3" Grid.Column="0" Style="{DynamicResource ContentStyle}" Foreground="Blue" Margin="20 0 0 0"
                           FontStyle="Italic" Name="txtInfo2" Visibility="Hidden">
                    Use the dropdowns to change time
                </TextBlock>

                <CheckBox Name="chkBlockProgram" Grid.Row="4" Grid.Column="0" HorizontalAlignment="Left" FontSize="12" FontFamily="{DynamicResource SourceSansProRegular}" VerticalAlignment="Center" Margin="0 15 0 0" Click="chkBlockProgram_Click">
                    Block select programs and websites while focusing</CheckBox>
                <StackPanel Name="sPnlBlockList" Orientation="Horizontal" Grid.Row="5" Grid.Column="0" VerticalAlignment="Center" Margin="20 0 0 0"
                            Visibility="Hidden">
                    <TextBlock Style="{DynamicResource SettingsSectionBody}" HorizontalAlignment="Left" VerticalAlignment="Center">Use this blocklist:</TextBlock>
                    <ComboBox Name="cmbBlockList" Style="{StaticResource SettingsViewEditComboBoxStyle}" MinWidth="154" Height="20" Margin="4 0 0 0"  Padding="3 3 1 3"
                              FontFamily="{DynamicResource SourceSansProRegular}" HorizontalAlignment="Left" VerticalAlignment="Center" 
                              ItemsSource="{Binding Path=BlockLists, BindsDirectlyToSource=True, Mode=TwoWay, UpdateSourceTrigger=PropertyChanged}" 
                              DisplayMemberPath="Name" SelectedValuePath="Name">
                    </ComboBox>
                </StackPanel>
            </Grid>


            <TextBlock Grid.Row="3" Grid.Column="0" Style="{DynamicResource ContentStyle}" Foreground="Blue" Margin="45 0 25 0" Padding="0" FontStyle="Italic" TextWrapping="WrapWithOverflow" Width="277" HorizontalAlignment="Left" Name="txtInfo3" Visibility="Hidden">
                Start a Focus session now for the following length of time (With the settings checked above)
            </TextBlock>

            <StackPanel Name="sPnlStartSession" Grid.Row="4" Grid.Column="0" Orientation="Horizontal" Margin="45 8 38 10" GotFocus="FocusChange" LostFocus="FocusChange" MouseEnter="MouseOver" MouseLeave="MouseOver">
                <Button Name="btn30Min" Style="{DynamicResource FocusButton}" Click="FocusStart" Tag="30">30 min</Button>
                <Button Name="btn1Hr" Style="{DynamicResource FocusButton}" Margin="10 0 0 0" Click="FocusStart" Tag="60">1 hr</Button>
                <Button Name="btn2Hrs" Style="{DynamicResource FocusButton}" Margin="10 0 0 0" Click="FocusStart" Tag="120">2 hrs</Button>
            </StackPanel>

            <Button Name="btnSessionTillStop" Grid.Row="5" Grid.Column="0" Style="{DynamicResource FocusButton}" Width="176" GotFocus="FocusChange" LostFocus="FocusChange" MouseEnter="MouseOver" MouseLeave="MouseOver" Click="FocusStart" Tag="0">Focus until I press Stop</Button>

            <TextBlock Grid.Row="6" Grid.Column="0" Style="{DynamicResource ContentStyle}" Foreground="Blue" Margin="45 0 25 4" Padding="0" FontStyle="Italic" HorizontalAlignment="Left" VerticalAlignment="Bottom" Name="txtInfo4" Visibility="Hidden">
                Customize Focus or schedule automatic focus sessions
            </TextBlock>

            <Button Name="btnSettings" Grid.Row="7" Grid.Column="0" Width="auto" Style="{DynamicResource SettingsButtonBottom}" Margin="0" Padding="15 8 0 9" Cursor="Hand" HorizontalContentAlignment="Left" Click="btnSettings_Click" GotFocus="FocusChange" LostFocus="FocusChange" MouseEnter="MouseOver" MouseLeave="MouseOver">
                <StackPanel Orientation="Horizontal">
                    <Image Source="/Images/Gear.png" Width="20" Height="20" VerticalAlignment="Center"/>
                    <TextBlock Margin="8 0 0 0" >Customize Focus</TextBlock>
                </StackPanel>
            </Button>
        </Grid>
    </Border>
</Window>
